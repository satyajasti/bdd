import snowflake.connector
import pandas as pd
from snowflake_connection import get_snowflake_connection

# Function to retrieve column names from the specified table
def get_columns_from_table(conn, schema_name, table_name):
    query = f"""
        SELECT COLUMN_NAME
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE TABLE_SCHEMA = '{schema_name}'
        AND TABLE_NAME = '{table_name}'
    """
    cur = conn.cursor()
    cur.execute(query)
    columns = [row[0] for row in cur.fetchall()]
    cur.close()
    return columns

# Function to calculate NULL percentage for each column
def calculate_null_percentage(conn, schema_name, table_name, columns):
    null_percentages = []
    cur = conn.cursor()
    
    for column in columns:
        query = f"""
            SELECT 
                '{column}' AS column_name, 
                ROUND((1 - COUNT({column}) * 1.0 / COUNT(*)) * 100, 2) AS null_percentage
            FROM {schema_name}.{table_name}
        """
        cur.execute(query)
        result = cur.fetchone()
        null_percentages.append({'column_name': result[0], 'null_percentage': result[1]})
    
    cur.close()
    return null_percentages

# Main function to run the process and write results to Excel
def main():
    # Get connection, schema, and table name from JSON config
    conn, database_name, schema_name, table_name = get_snowflake_connection('config.json')

    # Get all column names from the table
    columns = get_columns_from_table(conn, schema_name, table_name)

    # Calculate NULL percentage for each column
    null_percentages = calculate_null_percentage(conn, schema_name, table_name, columns)

    # Convert the results to a Pandas DataFrame
    df = pd.DataFrame(null_percentages)

    # Write the DataFrame to an Excel file
    output_file = 'null_percentage_report.xlsx'
    df.to_excel(output_file, sheet_name='Null_Percentage', index=False)

    print(f"Results written to {output_file}")

    # Close the Snowflake connection
    conn.close()

if __name__ == "__main__":
    main()


"data_pattern_checks": {
    "email_column": "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$",
    "date_column": "^\\d{4}-\\d{2}-\\d{2}$"  // Example regex for date pattern
  }
